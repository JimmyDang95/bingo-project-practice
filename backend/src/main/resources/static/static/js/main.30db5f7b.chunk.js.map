{"version":3,"sources":["components/AddNewUserForm.js","components/User.js","components/UserList.js","components/UserDetails.js","services/githubApi.js","components/AppHeader.js","App.js","reportWebVitals.js","components/GlobalStyle.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","AddNewUserForm","onAdd","classes","useState","username","setUsername","hasUsername","length","className","noValidate","autoComplete","onSubmit","event","preventDefault","TextField","id","label","variant","type","value","onChange","target","Fab","color","disabled","maxWidth","media","height","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","User","user","detailView","Card","CardMedia","image","title","CardContent","name","CardActions","Button","component","Link","to","UserList","users","Section","map","styled","section","UserDetails","useParams","setUser","useEffect","axios","get","then","response","data","getUser","AppHeader","Header","header","App","setUsers","loadedUsers","exact","path","newUserDto","post","githubApi","newUser","updatedUsers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createGlobalStyle","ReactDOM","render","StrictMode","GlobalStyle","document","getElementById"],"mappings":"oNAMMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF,QAAS,CACLC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,aAKJ,SAASC,EAAT,GAAkC,IAATC,EAAQ,EAARA,MAC9BC,EAAUT,IAD4B,EAEZU,mBAAS,IAFG,mBAErCC,EAFqC,KAE3BC,EAF2B,KAItCC,EAAcF,EAASG,OAAS,EAWtC,OACI,uBAAMC,UAAWN,EAAQN,KAAMa,YAAU,EAACC,aAAa,MAAMC,SAV5C,SAACC,GAClBA,EAAMC,iBACDP,IAGLL,EAAMG,GACNC,EAAY,MAIZ,UACI,cAACS,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,WAAWC,QAAQ,WAAWC,KAAK,OAAOC,MAAOf,EAAUgB,SAAU,SAACR,GAAD,OAAWP,EAAYO,EAAMS,OAAOF,UAC9I,cAACG,EAAA,EAAD,CAAKC,MAAM,UAAUL,KAAK,SAASM,UAAWlB,EAA9C,oB,yEC7BNb,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF6B,SAAU,KAEdC,MAAO,CACHC,OAAQ,KAGZC,OAAQ,CACJC,UAAW,eACXC,WAAY,OACZC,WAAYpC,EAAMqC,YAAYC,OAAO,YAAa,CAC9CC,SAAUvC,EAAMqC,YAAYE,SAASC,YAG7CC,WAAY,CACRP,UAAW,kBAEfQ,OAAQ,CACJC,gBAAiBC,IAAI,UAMd,SAASC,EAAT,GAAkC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,WAC1BxC,EAAUT,IAChB,OACI,eAACkD,EAAA,EAAD,CAAMnC,UAAWN,EAAQN,KAAzB,UAGI,cAACgD,EAAA,EAAD,CACIpC,UAAWN,EAAQwB,MACnBmB,MAAK,UAAKJ,EAAKJ,QACfS,MAAM,WAGN,cAACC,EAAA,EAAD,UACA,iDACeN,EAAKO,WAItBN,GACE,eAACO,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAQ3B,MAAM,UAAU4B,UAAWC,IAAMC,GAAE,gBAAWZ,EAAKO,MAA3D,qBAGA,cAACE,EAAA,EAAD,CAAQ3B,MAAM,YAAd,0BChDL,SAAS+B,EAAT,GAA2B,IAARC,EAAO,EAAPA,MAC9B,OACI,cAACC,EAAD,UACI,6BACKD,EAAME,KAAI,SAAChB,GAAD,OACX,6BACI,cAACD,EAAD,CAAMC,KAAMA,KADPA,EAAKO,aAU9B,IAAMQ,EAAUE,IAAOC,QAAV,oEAAGD,CAAH,gK,QCbE,SAASE,IAAe,IAC5BZ,EAAQa,cAARb,KAD2B,EAEV7C,mBAAS,MAFC,mBAE3BsC,EAF2B,KAErBqB,EAFqB,KAQlC,OAJAC,qBAAU,YCFS,SAACf,GAAD,OACnBgB,IAAMC,IAAN,oBAAuBjB,IAAQkB,MAAK,SAACC,GAAD,OAAcA,EAASC,SDEvDC,CAAQrB,GAAMkB,KAAKJ,KACpB,CAACd,IAEG,mCAAGP,GAAQ,cAACD,EAAD,CAAMC,KAAMA,EAAMC,YAAU,MEXnC,SAAS4B,IACpB,OACI,cAACC,EAAD,UACI,gDAKZ,IAAMA,EAASb,IAAOc,OAAV,oEAAGd,CAAH,kHC+BGe,I,EAAAA,EAjCf,WAAgB,IAAD,EACatE,mBAAS,IADtB,mBACNoD,EADM,KACCmB,EADD,KAeb,OAZAX,qBAAU,WFNVC,IAAMC,IAAI,YAAYC,MAAK,SAACC,GAAD,OAAcA,EAASC,QEO3BF,MAAK,SAACS,GAAD,OAAiBD,EAASC,QACnD,IAWD,cAAC,IAAD,UACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,UACQ,cAACP,EAAD,IACA,cAAChB,EAAD,CACIC,MAAOA,IAEX,cAACvD,EAAD,CAAgBC,MAhBlB,SAAC+C,IFdK,SAAC8B,GAAD,OACtBd,IAAMe,KAAK,WAAYD,GAAYZ,MAAK,SAACC,GAAD,OAAcA,EAASC,SEe7DY,CADmB,CAAEhC,SACUkB,MAAK,SAACe,GACnC,IAAMC,EAAY,sBAAO3B,GAAP,CAAc0B,IAChCP,EAASQ,YAcH,cAAC,IAAD,CAAOL,KAAK,cAAZ,SACI,cAACjB,EAAD,YCvBDuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCLCO,cAAf,8WCIAC,IAASC,OACP,eAAC,IAAMC,WAAP,WACI,cAACC,EAAD,IACF,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.30db5f7b.chunk.js","sourcesContent":["import {useState} from 'react'\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport {Button, Fab} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n}));\n\nexport default function AddNewUserForm({onAdd}) {\n    const classes = useStyles();\n    const [username, setUsername] = useState('')\n\n    const hasUsername = username.length > 0\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        if (!hasUsername) {\n            return\n        }\n        onAdd(username)\n        setUsername('')\n    }\n\n    return (\n        <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n            <TextField id=\"outlined-basic\" label=\"UserName\" variant=\"outlined\" type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)}/>\n            <Fab color='primary' type=\"submit\" disabled={!hasUsername}>\n                Add\n            </Fab>\n        </form>\n    )\n}\n","import {Button, Card, CardActions, CardContent, CardMedia, makeStyles} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {red} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 200,\n        // paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n\n\n\nexport default function User({user, detailView}){\n    const classes = useStyles();\n    return(\n        <Card className={classes.root}>\n\n\n            <CardMedia\n                className={classes.media}\n                image={`${user.avatar}`}\n                title=\"Avatar\"\n            />\n\n                <CardContent>\n                <section>\n                    UserName: {user.name}\n                </section>\n            </CardContent>\n\n            {!detailView && (\n                <CardActions>\n                    <Button color=\"primary\" component={Link} to={`/user/${user.name}`} >\n                        Details\n                    </Button>\n                    <Button color=\"secondary\">Delete</Button>\n                </CardActions>\n                )}\n\n        </Card>\n    )\n}","import User from './User'\nimport styled from 'styled-components/macro'\n\n\nexport default function UserList({users}){\n    return (\n        <Section>\n            <ul>\n                {users.map((user) => (\n                <li key={user.name}>\n                    <User user={user} />\n                </li>\n                    ))}\n            </ul>\n        </Section>\n    )\n\n}\n\nconst Section = styled.section`\n  padding: 0 16px;\n  margin: 10px 10px 5px 5px;\n  box-shadow: 5px 5px 5px grey;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  background: white;\n  color: black;\n`\n\n","import {useParams} from 'react-router-dom'\nimport {useEffect, useState} from \"react\";\nimport {getUser} from \"../services/githubApi\";\nimport User from \"./User\";\n\n\nexport default function UserDetails() {\n    const {name} = useParams()\n    const [user, setUser] = useState(null)\n\n    useEffect(() => {\n        getUser(name).then(setUser)\n    }, [name])\n\n    return <>{user && <User user={user} detailView/>}</>\n}","import axios from 'axios'\n\nexport const postUser = (newUserDto) =>\n  axios.post('api/user', newUserDto).then((response) => response.data)\n\nexport const getUsers = () =>\n  axios.get('api/user').then((response) => response.data)\n\nexport const getUser = (name) =>\n    axios.get(`/api/user/${name}`).then((response) => response.data)\n","import styled from 'styled-components/macro'\n\n\nexport default function AppHeader() {\n    return (\n        <Header>\n            <h1>GitHub Users</h1>\n        </Header>\n    )\n}\n\nconst Header = styled.header`\n  padding: 0 16px;\n  box-shadow: 5px 5px 5px grey;\n  display: flex;\n  justify-content: center;\n  background: white;\n  color: black;\n`","import {Component, useEffect, useState} from 'react'\nimport * as githubApi from './services/githubApi'\nimport AddNewUserForm from \"./components/AddNewUserForm\";\nimport UserList from \"./components/UserList\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport UserDetails from \"./components/UserDetails\";\nimport AppHeader from \"./components/AppHeader\";\n\n\nfunction App() {\n  const [users, setUsers] = useState([])\n\n  useEffect(() => {\n    githubApi.getUsers().then((loadedUsers) => setUsers(loadedUsers))\n  }, [])\n\n  const addUser = (name) => {\n    const newUserDto = { name }\n    githubApi.postUser(newUserDto).then((newUser) => {\n      const updatedUsers = [...users, newUser]\n      setUsers(updatedUsers)\n    })\n  }\n\n  return (\n    <Router>\n        <Switch>\n            <Route exact path=\"/\">\n                    <AppHeader/>\n                    <UserList\n                        users={users}\n                    />\n                    <AddNewUserForm onAdd={addUser}/>\n            </Route>\n            <Route path=\"/user/:name\">\n                <UserDetails />\n            </Route>\n        </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import {createGlobalStyle} from 'styled-components'\n\nexport default createGlobalStyle`\nul, li {\n    list-style-type: none;\n    display: flex;\n    flex-wrap: wrap;\n    margin-left: 10px;\n    margin-right: 10px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n}\n  html, body {\n    margin: 0;\n    font-family: sans-serif;\n  }\n   * {\n    box-sizing: border-box;\n  }\n  button {\n    cursor: pointer;\n  }\n\n  \n   `","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport GlobalStyle from \"./components/GlobalStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <GlobalStyle/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}